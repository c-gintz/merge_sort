"""
mergesort:
1. split array in half
2. call mergesort on each half to sort recursively until 1 element as it will be sorted.
3. merge sorted halves into a sorted array
"""

def merge_sort(arr):

  #base case
  if len(arr) <= 1:
    return arr
    
  #recursive step
  else:
    left_arr = arr[:len(arr)//2]
    right_arr = arr[len(arr)//2:]

    #recursion step
    merge_sort(left_arr)
    merge_sort(right_arr)
    
    #merge
    i = 0 # index left array
    j = 0 # index right array
    k = 0 # index merged array

    # walk down the index of array and compare
    while i < len(left_arr) and j < len(right_arr):
      
      if left_arr[i] < right_arr[j]:
        arr[k] = left_arr[i]
        i += 1
      
      else:
        arr[k] = right_arr[j]
        j += 1
      k += 1
      
    while i < len(left_arr): 
      arr[k] = left_arr[i]
      i += 1
      k += 1
      
    while j < len(right_arr):
      arr[k] = right_arr[j]
      j += 1
      k += 1
 
  return arr

my_array = [9,8,7,6,5,4,3,2,1,0,1,2,3,4,5,6,7,8,9,-5]
merge_sort(my_array)
print(my_array)
